version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: app-mysql
    environment:
      MYSQL_DATABASE: appdb
      MYSQL_USER: app
      MYSQL_PASSWORD: app
      MYSQL_ROOT_PASSWORD: root
    command: ["--default-authentication-plugin=mysql_native_password"]
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u root -proot --silent"]
      interval: 5s
      timeout: 3s
      retries: 15

  redis:
    image: redis:7-alpine
    container_name: app-redis
    command: ["redis-server", "--save", "60", "1", "--loglevel", "warning"]
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: app-backend
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: "mysql://app:app@mysql:3306/appdb"
      REDIS_URL: "redis://redis:6379"
      CORS_WHITELIST: "http://localhost:3040"
      FRONTEND_CLIENT: "http://localhost:3040"
      PORT: "8040"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8040:8040"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: "http://localhost:8040"
    container_name: app-frontend
    depends_on:
      - backend
    ports:
      - "3040:80"

volumes:
  mysql-data:
  redis-data:
